{"version":3,"sources":["components/Message.js","components/MessageList.js","components/SendMessageForm.js","components/RoomList.js","components/NewRoomForm.js","App.js","config.js","index.js"],"names":["Message","props","className","username","text","MessageList","this","messages","map","message","index","key","id","senderId","React","Component","SendMessageForm","state","handleChange","bind","handleSubmit","e","setState","target","value","preventDefault","sendMessage","onSubmit","onChange","placeholder","type","RoomList","rooms","room","onClick","subscribeToRoom","href","name","NewRoomForm","required","App","roomId","joinableRooms","joinedRooms","getRooms","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","catch","err","console","log","getJoinableRooms","hooks","onNewMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.090e7d58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Message(props) {  \r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"message-username\">{props.username}</div>\r\n            <div className=\"message-text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport Message from './Message'\r\n\r\nclass MessageList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"message-list\">\r\n                {this.props.messages.map((message, index) => {\r\n                    return (\r\n                        <Message key={message.id} username={message.senderId} text={message.text} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\nclass SendMessageForm extends React.Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            message: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(e) {\r\n        this.setState({\r\n            message: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.sendMessage(this.state.message)\r\n        this.setState({\r\n            message: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"send-message-form\">\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    value={this.state.message}\r\n                    placeholder=\"Type your message and hit ENTER\"\r\n                    type=\"text\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass RoomList extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"rooms-list\">\r\n                <ul>\r\n                <h3>Your rooms:</h3>\r\n                    {this.props.rooms.map(room => {\r\n                        return (\r\n                            <li key={room.id} className=\"room\">\r\n                                <a\r\n                                    onClick={() => this.props.subscribeToRoom(room.id)}\r\n                                    href=\"\">\r\n                                    # {room.name}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList","import React from 'react'\r\n\r\nclass NewRoomForm extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"new-room-form\">\r\n                <form>\r\n                    <input\r\n                        type=\"text\" \r\n                        placeholder=\"NewRoomForm\" \r\n                        required />\r\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRoomForm","import React from 'react';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport RoomList from './components/RoomList';\nimport NewRoomForm from './components/NewRoomForm';\n\nimport { tokenUrl, instanceLocator } from './config';\n\nclass App extends React.Component {\n    \n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: []\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n    } \n    \n    componentDidMount() {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator,\n            userId: 'sk',\n            tokenProvider: new Chatkit.TokenProvider({\n                url: tokenUrl\n            })\n        })\n        \n        chatManager.connect()\n        .then(currentUser => {\n            this.currentUser = currentUser\n            this.getRooms()\n        })\n        .catch(err => console.log('error on connecting: ', err))\n    }\n    \n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n    \n    subscribeToRoom(roomId) {\n        this.setState({ messages: [] })\n        this.currentUser.subscribeToRoom({\n            roomId: roomId,\n            hooks: {\n                onNewMessage: message => {\n                    this.setState({\n                        messages: [...this.state.messages, message]\n                    })\n                }\n            }\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n    \n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"app\">\n                <RoomList\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n                <MessageList messages={this.state.messages} />\n                <SendMessageForm sendMessage={this.sendMessage} />\n                <NewRoomForm />\n            </div>\n        );\n    }\n}\n\nexport default App","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/81ab8b2b-be64-4888-a11a-c6b852719fcd/token\";\r\nconst instanceLocator = \"v1:us1:81ab8b2b-be64-4888-a11a-c6b852719fcd\";\r\n\r\nexport { tokenUrl, instanceLocator }","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}